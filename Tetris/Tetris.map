Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_udivmodqi4.o)
                              tft.o (__udivmodqi4)
/usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_udivmodhi4.o)
                              tft.o (__udivmodhi4)
/usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_divmodhi4.o)
                              sound.o (__divmodhi4)
/usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm644p.o (exit)
/usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_copy_data.o)
                              display.o (__do_copy_data)
/usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_clear_bss.o)
                              rotary.o (__do_clear_bss)
/usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(rand.o)
                              tetris.o (rand)
/usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(eerd_byte_atmega644p.o)
                              tetris.o (__eerd_byte_m644p)
/usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(eerd_dword_atmega644p.o)
                              display.o (__eerd_dword_m644p)
/usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(eerd_word_atmega644p.o)
                              tetris.o (__eerd_word_m644p)
/usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(eeupd_byte_atmega644p.o)
                              tetris.o (__eeupd_byte_m644p)
/usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(eeupd_dword_atmega644p.o)
                              rand.o (__eeupd_dword_m644p)
/usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(eeupd_word_atmega644p.o)
                              tetris.o (__eeupd_word_m644p)
/usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(eewr_byte_atmega644p.o)
                              eemem.o (__eewr_byte_m644p)
/usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(eerd_block_atmega644p.o)
                              /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(eerd_dword_atmega644p.o) (__eerd_blraw_m644p)
/usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_muluhisi3.o)
                              /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(rand.o) (__muluhisi3)
/usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_mulshisi3.o)
                              /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(rand.o) (__mulohisi3)
/usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_divmodsi4.o)
                              /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(rand.o) (__divmodsi4)
/usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_umulhisi3.o)
                              /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_muluhisi3.o) (__umulhisi3)
/usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_udivmodsi4.o)
                              /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_divmodsi4.o) (__udivmodsi4)

Allocating common symbols
Common symbol       size              file

board               0x190             tetris.o
maximum             0x2               timer.o
counter             0x2               timer.o
err                 0x1               tetris.o
prev                0x1               rotary.o
object              0x2b              tetris.o
next                0x20              tetris.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm644p.o
LOAD main.o
LOAD ili9341.o
LOAD ascii.o
LOAD tft.o
LOAD rgbconv.o
LOAD rotary.o
LOAD sound.o
LOAD display.o
LOAD tetris.o
LOAD rand.o
LOAD timer.o
LOAD eemem.o
LOAD /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a
LOAD /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000     0x24f2
 *(.vectors)
 .vectors       0x00000000       0x7c /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm644p.o
                0x00000000                __vectors
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
 .progmem.data  0x0000007c      0x300 ascii.o
                0x0000007c                ascii
 .progmem.data  0x0000037c       0x15 tetris.o
                0x0000037c                colour
                0x0000038a                type
                0x00000392                . = ALIGN (0x2)
 *fill*         0x00000391        0x1 00
                0x00000392                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000392        0x0 linker stubs
 *(.trampolines*)
                0x00000392                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000392                __ctors_start = .
 *(.ctors)
                0x00000392                __ctors_end = .
                0x00000392                __dtors_start = .
 *(.dtors)
                0x00000392                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000392        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm644p.o
                0x00000392                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000392        0xc /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm644p.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000039e       0x16 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_copy_data.o)
                0x0000039e                __do_copy_data
 .init4         0x000003b4       0x10 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_clear_bss.o)
                0x000003b4                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x000003c4        0x8 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm644p.o
 *(.init9)
 *(.text)
 .text          0x000003cc        0x4 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm644p.o
                0x000003cc                __vector_22
                0x000003cc                __vector_28
                0x000003cc                __vector_1
                0x000003cc                __vector_24
                0x000003cc                __vector_12
                0x000003cc                __bad_interrupt
                0x000003cc                __vector_6
                0x000003cc                __vector_3
                0x000003cc                __vector_23
                0x000003cc                __vector_30
                0x000003cc                __vector_25
                0x000003cc                __vector_11
                0x000003cc                __vector_13
                0x000003cc                __vector_17
                0x000003cc                __vector_19
                0x000003cc                __vector_7
                0x000003cc                __vector_27
                0x000003cc                __vector_5
                0x000003cc                __vector_4
                0x000003cc                __vector_9
                0x000003cc                __vector_2
                0x000003cc                __vector_21
                0x000003cc                __vector_15
                0x000003cc                __vector_29
                0x000003cc                __vector_8
                0x000003cc                __vector_26
                0x000003cc                __vector_14
                0x000003cc                __vector_10
                0x000003cc                __vector_18
                0x000003cc                __vector_20
 .text          0x000003d0       0x30 main.o
                0x000003d0                init
 .text          0x00000400      0x11a ili9341.o
                0x00000400                TFT_send
                0x00000412                TFT_init
                0x000004fa                TFT_recv
                0x0000050e                TFT_backgroundLight
 .text          0x0000051a        0x0 ascii.o
 .text          0x0000051a      0x610 tft.o
                0x0000051a                TFT_area
                0x000005ac                TFT_point
                0x000005e8                TFT_fill
                0x0000063c                TFT_rectangle
                0x00000690                TFT_frame
                0x0000072a                TFT_putchar
                0x000007c6                TFT_putint16
                0x0000087a                TFT_putbigchar
                0x0000096c                TFT_putbigint16
                0x00000a5e                TFT_puts
                0x00000ac0                TFT_putbigs
 .text          0x00000b2a       0xda rgbconv.o
                0x00000b2a                c16i
                0x00000b52                c32i
                0x00000b8a                c32to16
                0x00000bfc                c32to16i
 .text          0x00000c04       0xc6 rotary.o
                0x00000c04                ROE_init
                0x00000c32                ROE_get
 .text          0x00000cca       0x72 sound.o
                0x00000cca                Sound_init
                0x00000cd0                delay
                0x00000ce0                Sound
 .text          0x00000d3c      0x5e0 display.o
                0x00000d9e                Print_saving
                0x00000dd8                Print_failed
                0x00000e12                Print_saveload
                0x00000f1a                Print_Speed
                0x00000f4c                Print_highest
                0x00000f80                Print_score
                0x00000fb4                Print_pause
                0x00000fe4                Print_start
                0x00001002                Print_frame
                0x000010ca                Print_gameover
                0x000010fe                Clean_object
                0x00001170                Print_unit
                0x000011e0                Print_board
                0x00001246                Print_next
                0x000012ac                Print_object
 .text          0x0000131c      0xd36 tetris.o
                0x0000131c                Tetris_getsavevalid
                0x00001324                Tetris_getsavescore
                0x0000132c                save
                0x00001464                load
                0x000015aa                saveload
                0x000015fc                Tetris_mem_init
                0x0000161e                refresh
                0x00001636                Tetris_saveload
                0x000016a0                Tetris_pause
                0x000016f0                valid
                0x000017da                Tetris_move
                0x00001802                Tetris_drop
                0x00001826                clean
                0x000018a2                Tetris_clean
                0x00001928                Tetris_place
                0x000019fa                near
                0x00001a5a                topcenter
                0x00001bf2                rotate
                0x00001ce2                Tetris_rotate
                0x00001dbe                Tetris_generate
                0x00001fae                Tetris_init
                0x00002028                Tetris_gameover
 .text          0x00002052       0x44 rand.o
                0x00002052                Rand_init
 .text          0x00002096      0x104 timer.o
                0x00002096                Timer_quick
                0x0000209e                Timer_normal
                0x000020a4                __vector_16
                0x00002128                __vector_default
                0x0000212a                Timer_reset
                0x00002148                Timer_init
                0x0000215e                Timer_faster
                0x00002186                Timer_speed
 .text          0x0000219a       0x34 eemem.o
                0x0000219a                EEPROM_first
 .text          0x000021ce        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_udivmodqi4.o)
 .text          0x000021ce        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_udivmodhi4.o)
 .text          0x000021ce        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_divmodhi4.o)
 .text          0x000021ce        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_exit.o)
 .text          0x000021ce        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_copy_data.o)
 .text          0x000021ce        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_clear_bss.o)
 .text          0x000021ce        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(rand.o)
 .text          0x000021ce        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(eerd_byte_atmega644p.o)
 .text          0x000021ce        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(eerd_dword_atmega644p.o)
 .text          0x000021ce        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(eerd_word_atmega644p.o)
 .text          0x000021ce        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(eeupd_byte_atmega644p.o)
 .text          0x000021ce        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(eeupd_dword_atmega644p.o)
 .text          0x000021ce        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(eeupd_word_atmega644p.o)
 .text          0x000021ce        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(eewr_byte_atmega644p.o)
 .text          0x000021ce        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(eerd_block_atmega644p.o)
 .text          0x000021ce        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_muluhisi3.o)
 .text          0x000021ce        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_mulshisi3.o)
 .text          0x000021ce        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_divmodsi4.o)
 .text          0x000021ce        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_umulhisi3.o)
 .text          0x000021ce        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_udivmodsi4.o)
                0x000021ce                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x000021ce       0x90 main.o
                0x000021ce                main
 .text.libgcc.mul
                0x0000225e        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_udivmodqi4.o)
 .text.libgcc.div
                0x0000225e       0x18 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_udivmodqi4.o)
                0x0000225e                __udivmodqi4
 .text.libgcc   0x00002276        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_udivmodqi4.o)
 .text.libgcc.prologue
                0x00002276        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_udivmodqi4.o)
 .text.libgcc.builtins
                0x00002276        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_udivmodqi4.o)
 .text.libgcc.fmul
                0x00002276        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_udivmodqi4.o)
 .text.libgcc.mul
                0x00002276        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_udivmodhi4.o)
 .text.libgcc.div
                0x00002276       0x28 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_udivmodhi4.o)
                0x00002276                __udivmodhi4
 .text.libgcc   0x0000229e        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_udivmodhi4.o)
 .text.libgcc.prologue
                0x0000229e        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_udivmodhi4.o)
 .text.libgcc.builtins
                0x0000229e        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_udivmodhi4.o)
 .text.libgcc.fmul
                0x0000229e        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_udivmodhi4.o)
 .text.libgcc.mul
                0x0000229e        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_divmodhi4.o)
 .text.libgcc.div
                0x0000229e       0x28 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_divmodhi4.o)
                0x0000229e                __divmodhi4
                0x0000229e                _div
 .text.libgcc   0x000022c6        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_divmodhi4.o)
 .text.libgcc.prologue
                0x000022c6        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_divmodhi4.o)
 .text.libgcc.builtins
                0x000022c6        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_divmodhi4.o)
 .text.libgcc.fmul
                0x000022c6        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_divmodhi4.o)
 .text.libgcc.mul
                0x000022c6        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.div
                0x000022c6        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x000022c6        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x000022c6        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x000022c6        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x000022c6        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x000022c6        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x000022c6        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc   0x000022c6        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x000022c6        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x000022c6        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x000022c6        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x000022c6        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x000022c6        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc   0x000022c6        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x000022c6        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x000022c6        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x000022c6        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_clear_bss.o)
 .text.avr-libc
                0x000022c6       0xc2 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(rand.o)
                0x00002362                rand_r
                0x00002368                rand
                0x00002372                srand
 .text.avr-libc
                0x00002388       0x10 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(eerd_byte_atmega644p.o)
                0x00002388                __eerd_byte_m644p
 .text.avr-libc
                0x00002398        0xc /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(eerd_dword_atmega644p.o)
                0x00002398                __eerd_dword_m644p
                0x00002398                __eerd_float_m644p
 .text.avr-libc
                0x000023a4        0xc /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(eerd_word_atmega644p.o)
                0x000023a4                __eerd_word_m644p
 .text.avr-libc
                0x000023b0       0x24 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(eeupd_byte_atmega644p.o)
                0x000023b0                __eeupd_byte_m644p
                0x000023b2                __eeupd_r18_m644p
 .text.avr-libc
                0x000023d4       0x18 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(eeupd_dword_atmega644p.o)
                0x000023d4                __eeupd_dword_m644p
                0x000023d4                __eeupd_float_m644p
 .text.avr-libc
                0x000023ec        0xc /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(eeupd_word_atmega644p.o)
                0x000023ec                __eeupd_word_m644p
 .text.avr-libc
                0x000023f8       0x1c /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(eewr_byte_atmega644p.o)
                0x000023f8                __eewr_byte_m644p
                0x000023fa                __eewr_r18_m644p
 .text.avr-libc
                0x00002414       0x20 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(eerd_block_atmega644p.o)
                0x00002414                __eerd_block_m644p
                0x00002418                __eerd_blraw_m644p
 .text.libgcc.mul
                0x00002434       0x16 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_muluhisi3.o)
                0x00002434                __muluhisi3
 .text.libgcc.div
                0x0000244a        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_muluhisi3.o)
 .text.libgcc   0x0000244a        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_muluhisi3.o)
 .text.libgcc.prologue
                0x0000244a        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_muluhisi3.o)
 .text.libgcc.builtins
                0x0000244a        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_muluhisi3.o)
 .text.libgcc.fmul
                0x0000244a        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_muluhisi3.o)
 .text.libgcc.mul
                0x0000244a       0x10 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_mulshisi3.o)
                0x0000244a                __mulshisi3
                0x00002450                __mulohisi3
 .text.libgcc.div
                0x0000245a        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_mulshisi3.o)
 .text.libgcc   0x0000245a        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_mulshisi3.o)
 .text.libgcc.prologue
                0x0000245a        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_mulshisi3.o)
 .text.libgcc.builtins
                0x0000245a        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_mulshisi3.o)
 .text.libgcc.fmul
                0x0000245a        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_mulshisi3.o)
 .text.libgcc.mul
                0x0000245a        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_divmodsi4.o)
 .text.libgcc.div
                0x0000245a       0x38 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_divmodsi4.o)
                0x0000245a                __divmodsi4
 .text.libgcc   0x00002492        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_divmodsi4.o)
 .text.libgcc.prologue
                0x00002492        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_divmodsi4.o)
 .text.libgcc.builtins
                0x00002492        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_divmodsi4.o)
 .text.libgcc.fmul
                0x00002492        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_divmodsi4.o)
 .text.libgcc.mul
                0x00002492       0x18 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_umulhisi3.o)
                0x00002492                __umulhisi3
 .text.libgcc.div
                0x000024aa        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_umulhisi3.o)
 .text.libgcc   0x000024aa        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_umulhisi3.o)
 .text.libgcc.prologue
                0x000024aa        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_umulhisi3.o)
 .text.libgcc.builtins
                0x000024aa        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_umulhisi3.o)
 .text.libgcc.fmul
                0x000024aa        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_umulhisi3.o)
 .text.libgcc.mul
                0x000024aa        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_udivmodsi4.o)
 .text.libgcc.div
                0x000024aa       0x44 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_udivmodsi4.o)
                0x000024aa                __udivmodsi4
 .text.libgcc   0x000024ee        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_udivmodsi4.o)
 .text.libgcc.prologue
                0x000024ee        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_udivmodsi4.o)
 .text.libgcc.builtins
                0x000024ee        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_udivmodsi4.o)
 .text.libgcc.fmul
                0x000024ee        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_udivmodsi4.o)
                0x000024ee                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000024ee        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_exit.o)
                0x000024ee                exit
                0x000024ee                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x000024ee        0x4 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_exit.o)
 *(.fini0)
                0x000024f2                _etext = .

.data           0x00800100       0xa8 load address 0x000024f2
                0x00800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800100        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm644p.o
 .data          0x00800100        0x0 main.o
 .data          0x00800100        0x0 ili9341.o
 .data          0x00800100        0x0 ascii.o
 .data          0x00800100        0x0 tft.o
 .data          0x00800100        0x0 rgbconv.o
 .data          0x00800100        0x0 rotary.o
 .data          0x00800100        0x0 sound.o
 .data          0x00800100        0x0 display.o
 .data          0x00800100        0x0 tetris.o
 .data          0x00800100        0x0 rand.o
 .data          0x00800100        0x0 timer.o
 .data          0x00800100        0x1 eemem.o
                0x00800100                first
 .data          0x00800101        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_udivmodqi4.o)
 .data          0x00800101        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_udivmodhi4.o)
 .data          0x00800101        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_divmodhi4.o)
 .data          0x00800101        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_exit.o)
 .data          0x00800101        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_copy_data.o)
 .data          0x00800101        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_clear_bss.o)
 .data          0x00800101        0x4 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(rand.o)
 .data          0x00800105        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(eerd_byte_atmega644p.o)
 .data          0x00800105        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(eerd_dword_atmega644p.o)
 .data          0x00800105        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(eerd_word_atmega644p.o)
 .data          0x00800105        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(eeupd_byte_atmega644p.o)
 .data          0x00800105        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(eeupd_dword_atmega644p.o)
 .data          0x00800105        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(eeupd_word_atmega644p.o)
 .data          0x00800105        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(eewr_byte_atmega644p.o)
 .data          0x00800105        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(eerd_block_atmega644p.o)
 .data          0x00800105        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_muluhisi3.o)
 .data          0x00800105        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_mulshisi3.o)
 .data          0x00800105        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_divmodsi4.o)
 .data          0x00800105        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_umulhisi3.o)
 .data          0x00800105        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_udivmodsi4.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 .rodata.str1.1
                0x00800105       0xa2 display.o
 *(.gnu.linkonce.d*)
                0x008001a8                . = ALIGN (0x2)
 *fill*         0x008001a7        0x1 00
                0x008001a8                _edata = .
                0x008001a8                PROVIDE (__data_end, .)

.bss            0x008001a8      0x1e3
                0x008001a8                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x008001a8        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm644p.o
 .bss           0x008001a8        0x0 main.o
 .bss           0x008001a8        0x0 ili9341.o
 .bss           0x008001a8        0x0 ascii.o
 .bss           0x008001a8        0x0 tft.o
 .bss           0x008001a8        0x0 rgbconv.o
 .bss           0x008001a8        0x0 rotary.o
 .bss           0x008001a8        0x0 sound.o
 .bss           0x008001a8        0x0 display.o
 .bss           0x008001a8        0x0 tetris.o
 .bss           0x008001a8        0x0 rand.o
 .bss           0x008001a8        0x2 timer.o
                0x008001a8                quick
                0x008001a9                overflow
 .bss           0x008001aa        0x0 eemem.o
 .bss           0x008001aa        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_udivmodqi4.o)
 .bss           0x008001aa        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_udivmodhi4.o)
 .bss           0x008001aa        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_divmodhi4.o)
 .bss           0x008001aa        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_exit.o)
 .bss           0x008001aa        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_copy_data.o)
 .bss           0x008001aa        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_clear_bss.o)
 .bss           0x008001aa        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(rand.o)
 .bss           0x008001aa        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(eerd_byte_atmega644p.o)
 .bss           0x008001aa        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(eerd_dword_atmega644p.o)
 .bss           0x008001aa        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(eerd_word_atmega644p.o)
 .bss           0x008001aa        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(eeupd_byte_atmega644p.o)
 .bss           0x008001aa        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(eeupd_dword_atmega644p.o)
 .bss           0x008001aa        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(eeupd_word_atmega644p.o)
 .bss           0x008001aa        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(eewr_byte_atmega644p.o)
 .bss           0x008001aa        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(eerd_block_atmega644p.o)
 .bss           0x008001aa        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_muluhisi3.o)
 .bss           0x008001aa        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_mulshisi3.o)
 .bss           0x008001aa        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_divmodsi4.o)
 .bss           0x008001aa        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_umulhisi3.o)
 .bss           0x008001aa        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_udivmodsi4.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x008001aa        0x1 rotary.o
                0x008001aa                prev
 COMMON         0x008001ab      0x1dc tetris.o
                0x008001ab                board
                0x0080033b                err
                0x0080033c                object
                0x00800367                next
 COMMON         0x00800387        0x4 timer.o
                0x00800387                maximum
                0x00800389                counter
                0x0080038b                PROVIDE (__bss_end, .)
                0x000024f2                __data_load_start = LOADADDR (.data)
                0x0000259a                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0080038b        0x0
                0x0080038b                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0080038b                PROVIDE (__noinit_end, .)
                0x0080038b                _end = .
                0x0080038b                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000     0x5a78
 *(.stab)
 .stab          0x00000000      0x6cc /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm644p.o
 .stab          0x000006cc      0x5d0 main.o
                                0x5dc (size before relaxing)
 .stab          0x00000c9c      0x528 ili9341.o
                                0x6f0 (size before relaxing)
 .stab          0x000011c4      0x150 ascii.o
                                0x324 (size before relaxing)
 .stab          0x00001314      0xbb8 tft.o
                                0xda4 (size before relaxing)
 .stab          0x00001ecc      0x30c rgbconv.o
                                0x4d4 (size before relaxing)
 .stab          0x000021d8      0x36c rotary.o
                                0x534 (size before relaxing)
 .stab          0x00002544      0x300 sound.o
                                0x4c8 (size before relaxing)
 .stab          0x00002844      0xa80 display.o
                                0xc60 (size before relaxing)
 .stab          0x000032c4     0x1734 tetris.o
                               0x1920 (size before relaxing)
 .stab          0x000049f8      0x1c8 rand.o
                                0x3fc (size before relaxing)
 .stab          0x00004bc0      0x474 timer.o
                                0x63c (size before relaxing)
 .stab          0x00005034      0x1bc eemem.o
                                0x3b4 (size before relaxing)
 .stab          0x000051f0      0x318 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(rand.o)
                                0x324 (size before relaxing)
 .stab          0x00005508       0x90 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(eerd_byte_atmega644p.o)
                                 0x9c (size before relaxing)
 .stab          0x00005598       0x78 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(eerd_dword_atmega644p.o)
                                 0x84 (size before relaxing)
 .stab          0x00005610       0x6c /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(eerd_word_atmega644p.o)
                                 0x78 (size before relaxing)
 .stab          0x0000567c      0x114 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(eeupd_byte_atmega644p.o)
                                0x120 (size before relaxing)
 .stab          0x00005790       0x9c /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(eeupd_dword_atmega644p.o)
                                 0xa8 (size before relaxing)
 .stab          0x0000582c       0x60 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(eeupd_word_atmega644p.o)
                                 0x6c (size before relaxing)
 .stab          0x0000588c       0xe4 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(eewr_byte_atmega644p.o)
                                 0xf0 (size before relaxing)
 .stab          0x00005970      0x108 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(eerd_block_atmega644p.o)
                                0x114 (size before relaxing)

.stabstr        0x00000000     0x17c6
 *(.stabstr)
 .stabstr       0x00000000     0x17c6 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm644p.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x00000000       0x22
 *(.comment)
 .comment       0x00000000       0x11 main.o
                                 0x12 (size before relaxing)
 .comment       0x00000000       0x12 ili9341.o
 .comment       0x00000000       0x12 ascii.o
 .comment       0x00000000       0x12 tft.o
 .comment       0x00000000       0x12 rgbconv.o
 .comment       0x00000000       0x12 rotary.o
 .comment       0x00000000       0x12 sound.o
 .comment       0x00000000       0x12 display.o
 .comment       0x00000000       0x12 tetris.o
 .comment       0x00000000       0x12 rand.o
 .comment       0x00000000       0x12 timer.o
 .comment       0x00000000       0x12 eemem.o
 .comment       0x00000011       0x11 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(rand.o)
                                 0x12 (size before relaxing)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(Tetris.elf elf32-avr)
LOAD linker stubs
